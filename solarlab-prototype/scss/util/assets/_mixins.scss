// ----------------------------------------------------------------------------
// Font size
@function calculate-rem($size) {
  $rem-size: $size / 16;
  @return $rem-size * 1rem;
}
@function rem-calc($size) {
  $rem-size: $size / 16;
  @return $rem-size * 1rem;
}

@mixin font-size($size) {
  font-size: calculate-rem($size);
}

// ----------------------------------------------------------------------------
// Indent between letters
@function tracking($target) {
  @return ($target / 1000) * 1em;
}

@mixin tracking($target) {
  letter-spacing: tracking($target);
}

// ----------------------------------------------------------------------------
// Links
@mixin links($color: $black, $hover: $black, $dec: false) {
  color: $color;

  @if $dec == true {
    text-decoration: underline;
  }
  @if $dec == false {
    text-decoration: none;
  }

  &:hover {
    color: $hover;
  }
}

// ----------------------------------------------------------------------------
// Media queries
// Accept two parameters Point and MIN/MAX value
// @example: @include media-q(min, 980);
@mixin media-q($extrema: null, $point: null, $orient: null) {
  @if $extrema == "min" {
    $extrema: min;
  }

  @if $extrema == "max" {
    $extrema: max;
  }

  @if $orient == "p" {
    $orient: portrait;
  }

  @if $orient == "l" {
    $orient: landscape;
  }

  @if $orient == null {
    @media only screen and (#{$extrema}-width: $point+'px') {
      @content;
    }
  } @else {
    @media only screen and (#{$extrema}-width: $point+'px') and (orientation: #{$orient}) {
      @content;
    }
  }
}

// ----------------------------------------------------------------------------
// Max width of the content with centering
%max-width {
  max-width: 1210px;
  margin: 0 auto;
  padding: 0 20px;
}

// Shortcut for inline block elements
// ----------------------------------------------------------------------------
%dib-m {
  display: inline-block;
  vertical-align: middle;
}

// ----------------------------------------------------------------------------
// Hide element from view, but keep it for Screen readers
%element-invisible,
.element-invisible {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  border: 0 !important;
}

// Hide element
.element-hidden {
  @extend %element-invisible;
}

// ----------------------------------------------------------------------------
// Reset base list style for list items
%reset-list {
  padding: 0;
  margin: 0;
  list-style: none;
}

// ----------------------------------------------------------------------------
// Clear fix
// Paste element after current content to clear both float.
%group::after,
.group::after {
  content: '';
  clear: both; 
  display: block;
  font-size: 0;
  height: 0;
  line-height: 0;
  visibility: hidden;
}

// ----------------------------------------------------------------------------
// Responsive video
%responsive-video {
  position: relative;
  padding-bottom: 56.25%; // 16/9 ratio
  height: 0 !important;
  overflow: hidden;
  display: block;

  iframe,
  object,
  embed,
  .video-js {
    border: 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
  }
}

@mixin round-img($size: 85px) {
  overflow: hidden;
  border-radius: 50%;
  box-shadow: 0 0 4px rgba($black, 0.2);
  width: $size;
}

// For development process
@mixin outline($color: #3bffff) {
  outline: 1px solid $color;
}

// Use for properties with same value
@mixin same($value, $properties...) {
  @each $property in $properties {
    #{$property}: $value;
  }
}
